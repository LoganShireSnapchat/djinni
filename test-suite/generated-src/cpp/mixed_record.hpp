// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from optionals.djinni

#pragma once

#include "../../handwritten-src/cpp/optional.hpp"
#include "base_record.hpp"
#include <cstdint>
#include <memory>
#include <utility>

namespace testsuite {

class OptionalInterface;

/** Record with a mix of optional and required values */
struct MixedRecord final {
    /*nullable*/ std::shared_ptr<OptionalInterface> interfaceVal;
    int32_t reqInt;
    std::experimental::optional<BaseRecord> optRecord;
    BaseRecord reqRecord;

    MixedRecord(/*nullable*/ std::shared_ptr<OptionalInterface> interfaceVal_,
                int32_t reqInt_,
                std::experimental::optional<BaseRecord> optRecord_,
                BaseRecord reqRecord_)
    : interfaceVal(std::move(interfaceVal_))
    , reqInt(std::move(reqInt_))
    , optRecord(std::move(optRecord_))
    , reqRecord(std::move(reqRecord_))
    {}

    MixedRecord(int32_t reqInt_,
                BaseRecord reqRecord_)
    : MixedRecord(nullptr,
                  std::move(reqInt_),
                  std::experimental::nullopt,
                  std::move(reqRecord_))
    {}
};

} // namespace testsuite
