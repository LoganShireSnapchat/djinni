// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from optionals.djinni

#include "NativeOptionalTestHelpers.hpp"  // my header
#include "NativeBaseRecord.hpp"
#include "NativeMixedRecord.hpp"
#include "NativeOptionalInterface.hpp"
#include "NativeOptionalRecord.hpp"

namespace djinni_generated {

em::val NativeOptionalTestHelpers::cppProxyMethods() {
    static const em::val methods = em::val::array(std::vector<std::string> {
    });
    return methods;
}

em::val NativeOptionalTestHelpers::get_base_record() {
    try {
        auto r = ::testsuite::OptionalTestHelpers::get_base_record();
        return ::djinni_generated::NativeBaseRecord::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni_generated::NativeBaseRecord>::handleNativeException(e);
    }
}
em::val NativeOptionalTestHelpers::optional_interface() {
    try {
        auto r = ::testsuite::OptionalTestHelpers::optional_interface();
        return ::djinni_generated::NativeOptionalInterface::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni_generated::NativeOptionalInterface>::handleNativeException(e);
    }
}
em::val NativeOptionalTestHelpers::get_mixed_record() {
    try {
        auto r = ::testsuite::OptionalTestHelpers::get_mixed_record();
        return ::djinni_generated::NativeMixedRecord::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni_generated::NativeMixedRecord>::handleNativeException(e);
    }
}
em::val NativeOptionalTestHelpers::get_optional_record() {
    try {
        auto r = ::testsuite::OptionalTestHelpers::get_optional_record();
        return ::djinni_generated::NativeOptionalRecord::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni_generated::NativeOptionalRecord>::handleNativeException(e);
    }
}
em::val NativeOptionalTestHelpers::mixed_record_id(const em::val& w_i) {
    try {
        auto r = ::testsuite::OptionalTestHelpers::mixed_record_id(::djinni_generated::NativeMixedRecord::toCpp(w_i));
        return ::djinni_generated::NativeMixedRecord::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni_generated::NativeMixedRecord>::handleNativeException(e);
    }
}

EMSCRIPTEN_BINDINGS(testsuite_optional_test_helpers) {
    ::djinni::DjinniClass_<::testsuite::OptionalTestHelpers>("testsuite_OptionalTestHelpers", "testsuite.OptionalTestHelpers")
        .smart_ptr<std::shared_ptr<::testsuite::OptionalTestHelpers>>("testsuite_OptionalTestHelpers")
        .function("nativeDestroy", &NativeOptionalTestHelpers::nativeDestroy)
        .class_function("getBaseRecord", NativeOptionalTestHelpers::get_base_record)
        .class_function("optionalInterface", NativeOptionalTestHelpers::optional_interface)
        .class_function("getMixedRecord", NativeOptionalTestHelpers::get_mixed_record)
        .class_function("getOptionalRecord", NativeOptionalTestHelpers::get_optional_record)
        .class_function("mixedRecordId", NativeOptionalTestHelpers::mixed_record_id)
        ;
}

} // namespace djinni_generated
