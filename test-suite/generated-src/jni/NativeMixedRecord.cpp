// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from optionals.djinni

#include "NativeMixedRecord.hpp"  // my header
#include "Marshal.hpp"
#include "NativeBaseRecord.hpp"
#include "NativeOptionalInterface.hpp"

namespace djinni_generated {

NativeMixedRecord::NativeMixedRecord() = default;

NativeMixedRecord::~NativeMixedRecord() = default;

auto NativeMixedRecord::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeMixedRecord>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::Optional<std::experimental::optional, ::djinni_generated::NativeOptionalInterface>::fromCpp(jniEnv, c.interfaceVal)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.reqInt)),
                                                           ::djinni::get(::djinni::Optional<std::experimental::optional, ::djinni_generated::NativeBaseRecord>::fromCpp(jniEnv, c.optRecord)),
                                                           ::djinni::get(::djinni_generated::NativeBaseRecord::fromCpp(jniEnv, c.reqRecord)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeMixedRecord::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 5);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeMixedRecord>::get();
    return {::djinni::Optional<std::experimental::optional, ::djinni_generated::NativeOptionalInterface>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mInterfaceVal)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mReqInt)),
            ::djinni::Optional<std::experimental::optional, ::djinni_generated::NativeBaseRecord>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mOptRecord)),
            ::djinni_generated::NativeBaseRecord::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mReqRecord))};
}

} // namespace djinni_generated
